# 测试环境
spring.jmx.default-domain=bes
#spring-boot 不推荐JSP，想使用JSP需要配置application.properties。   
#添加src/main/resources/application.properties内容：  
#######1.当parent标签中引入的是1.4.0版本的话,那么applicaion.properties中配置jsp前缀和后缀的时候应该配置如下,一定要带上mvc  
############spring.mvc.view.prefix=/WEB-INF/jsp/  
############spring.mvc.view.suffix=.jsp  
#######2.当parent标签中引入的是1.1.3版本的话,那么applicaion.properties中配置jsp前缀和后缀的时候应该配置如下,一定不要带上mvc  
############spring.view.prefix=/WEB-INF/jsp/  
############spring.view.suffix=.jsp  

#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#页面默认后缀目录
spring.mvc.view.suffix=.jsp
#MVC classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/****/
#spring.resources.static-locations=classpath:/static/
# 自定义属性，可以在Controller中读取
welcome.message=HelloAngel From application

# 应用服务配置
server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet
server.error.whitelabel.enabled=true


# 随机字符串
com.didispace.blog.value=${random.value}
# 随机int
com.didispace.blog.number=${random.int}
# 随机long
com.didispace.blog.bignumber=${random.long}
# 10以内的随机数
com.didispace.blog.test1=${random.int(10)}
# 10-20的随机数
com.didispace.blog.test2=${random.int[10,20]}


########################################################
###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.view-names= # whitelist of view names that can be resolved
spring.freemarker.request-context-attribute=request
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.order=1


logging.config=classpath:conf/log4j2.xml
#logging.level.cn.springboot=TRACE
#logging.level.org.activiti=DEBUG
#logging.level.org.springframework=INFO
#logging.level.org.apache=ERROR
#logging.level.org.mybatis=INFO
#logging.level.org.apache.ibatis.jdbc.ScriptRunner=DEBUG
#logging.level.java.sql.Connection=DEBUG
#logging.level.java.sql.Statement=DEBUG
#logging.level.java.sql.PreparedStatement=DEBUG

# 数据库连接
druid.datasource.url=jdbc:mysql://10.211.55.5:3306/besdb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
druid.datasource.driverClassName=com.mysql.jdbc.Driver
druid.datasource.username=root
druid.datasource.password=123456
 # SELECT 'x'
druid.datasource.validationQuery=SELECT 1 FROM DUAL
#druid.datasource.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo.sqlite
#druid.datasource.driverClassName=org.sqlite.JDBC
#druid.datasource.username=
#druid.datasource.password=
#druid.datasource.validationQuery=SELECT count(name) FROM sqlite_master

# 进行数据库连接池的配置
# 初始化提供的连接数
druid.datasource.initialSize=5
# 连接池的最大数据库连接数。设为0表示无限制       
druid.datasource.maxActive=10
# 数据库连接池的最小维持连接数         
druid.datasource.minIdle=5
# 配置获取连接等待超时的时间
druid.datasource.maxWait=60000
druid.datasource.useUnfairLock=true
druid.datasource.testOnBorrow=false
druid.datasource.testOnReturn=false
druid.datasource.testWhileIdle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
druid.datasource.minEvictableIdleTimeMillis=300000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
druid.datasource.filters=stat,wall,log4j
#druid.datasource.filters=stat,log4j

# 多数据源配置
custom.datasource.names=db1,db2
custom.datasource.db1.url=jdbc:mysql://10.211.55.5:3306/besdb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
custom.datasource.db1.driverClassName=com.mysql.jdbc.Driver
custom.datasource.db1.username=root
custom.datasource.db1.password=123456
custom.datasource.db1.validationQuery=SELECT 'x'
#custom.datasource.db1.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo1.sqlite
#custom.datasource.db1.driverClassName=org.sqlite.JDBC
#custom.datasource.db1.username=root
#custom.datasource.db1.password=root
#custom.datasource.db1.validationQuery=SELECT count(name) FROM sqlite_master

custom.datasource.db2.url=jdbc:mysql://10.211.55.5:3306/besdb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
custom.datasource.db2.driverClassName=com.mysql.jdbc.Driver
custom.datasource.db2.username=root
custom.datasource.db2.password=123456
custom.datasource.db2.validationQuery=SELECT 'x'
#custom.datasource.db2.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo2.sqlite
#custom.datasource.db2.driverClassName=org.sqlite.JDBC
#custom.datasource.db2.username=
#custom.datasource.db2.password=
#custom.datasource.db2.validationQuery=SELECT count(name) FROM sqlite_master

#pagehelper
#pagehelper.helperDialect=sqlite
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# session共享存储 只支持redis none
spring.session.store-type=none
# 支持redis none REDIS
spring.cache.type=none
# 配置session失效时间
server.session.timeout=90000

