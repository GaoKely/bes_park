# 开发环境
spring.jmx.default-domain=bes

#spring-boot 不推荐JSP，想使用JSP需要配置application.properties。
#添加src/main/resources/application.properties内容：
#######1.当parent标签中引入的是1.4.0版本的话,那么applicaion.properties中配置jsp前缀和后缀的时候应该配置如下,一定要带上mvc
############spring.mvc.view.prefix=/WEB-INF/jsp/
############spring.mvc.view.suffix=.jsp
#######2.当parent标签中引入的是1.1.3版本的话,那么applicaion.properties中配置jsp前缀和后缀的时候应该配置如下,一定不要带上mvc
############spring.view.prefix=/WEB-INF/jsp/
############spring.view.suffix=.jsp

#页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
#页面默认后缀目录
spring.mvc.view.suffix=.jsp
#MVC classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/****/
#spring.resources.static-locations=classpath:/static/
# 自定义属性，可以在Controller中读取
welcome.message=HelloAngel From application

# 应用服务配置
server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet
server.error.whitelabel.enabled=true


# 随机字符串
com.didispace.blog.value=${random.value}
# 随机int
com.didispace.blog.number=${random.int}
# 随机long
com.didispace.blog.bignumber=${random.long}
# 10以内的随机数
com.didispace.blog.test1=${random.int(10)}
# 10-20的随机数
com.didispace.blog.test2=${random.int[10,20]}


########################################################
###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
#spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=
#spring.freemarker.settings.*=
#spring.freemarker.view-names= # whitelist of view names that can be resolved
spring.freemarker.request-context-attribute=request
spring.freemarker.allow-request-override=false
spring.freemarker.allow-session-override=false
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.enabled=true
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=true
spring.freemarker.prefer-file-system-access=true
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates/
spring.freemarker.settings.template_update_delay=0
spring.freemarker.settings.default_encoding=UTF-8
spring.freemarker.settings.classic_compatible=true
spring.freemarker.order=1


logging.config=classpath:conf/log4j2.xml
logging.level.root=info
#logging.level.cn.springboot=TRACE
#logging.level.org.activiti=DEBUG
#logging.level.org.springframework=INFO
#logging.level.org.apache=ERROR
#logging.level.org.mybatis=INFO
#logging.level.org.apache.ibatis.jdbcdebugPointInfo.ScriptRunner=DEBUG
#logging.level.java.sql.Connection=DEBUG
#logging.level.java.sql.Statement=DEBUG
#logging.level.java.sql.PreparedStatement=DEBUG

# mongoDB连接
#spring.data.mongodb.uri= mongodb://root:123456@172.16.13.201:27017,172.16.13.201:27018/zcdb
#spring.data.mongodb.defaultDB = zcdb


# 数据库连接
#druid.datasource.url=jdbc:mysql://172.16.14.90:3306/bes_ruodian?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
#druid.datasource.url=jdbc:mysql://localhost:3306/bes_newpark20220331?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
druid.datasource.url=jdbc:mysql://60.208.80.101:8083/bes_park?serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
#druid.datasource.url=jdbc:mysql://172.16.14.53:3306/bes_collect?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
#druid.datasource.url=jdbc:mysql://127.0.0.1:3306/bes-park?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
#druid.datasource.url=jdbc:mysql://192.168.10.63:3306/bes_ruodian?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
druid.datasource.driverClassName=com.mysql.cj.jdbc.Driver
druid.datasource.username=root
druid.datasource.password=zc@energy
#druid.datasource.username=cross
#druid.datasource.password=cross
#druid.datasource.password=root
# SELECT 'x'
druid.datasource.validationQuery=SELECT 1 FROM DUAL
#druid.datasource.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo.sqlite
#druid.datasource.driverClassName=org.sqlite.J1DBC
#druid.datasource.username=
#druid.datasource.password=
#druid.datasource.validationQuery=SELECT count(name) FROM sqlite_master

# 进行数据库连接池的配置
# 初始化提供的连接数
druid.datasource.initialSize=5
# 连接池的最大数据库连接数。设为0表示无限制
druid.datasource.maxActive=1000
# 数据库连接池的最小维持连接数
druid.datasource.minIdle=5
# 配置获取连接等待超时的时间
druid.datasource.maxWait=60000
druid.datasource.useUnfairLock=true
druid.datasource.testOnBorrow=false
druid.datasource.testOnReturn=false
druid.datasource.testWhileIdle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
druid.datasource.minEvictableIdleTimeMillis=300000
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#druid.datasource.filters=stat,wall,log4j
druid.datasource.filters=stat,log4j
spring.jmx.enabled=false

# 多数据源配置
custom.datasource.names=db1,db2
custom.datasource.db1.url=jdbc:mysql://172.16.13.201:3306/bestest?useUnicode=true&characterEncoding=UTF-8&useSSL=false
custom.datasource.db1.driverClassName=com.mysql.jdbc.Driver
custom.datasource.db1.username=root
custom.datasource.db1.password=123456
custom.datasource.db1.validationQuery=SELECT 'x'
#custom.datasource.db1.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo1.sqlite
#custom.datasource.db1.driverClassName=org.sqlite.JDBC
#custom.datasource.db1.username=root
#custom.datasource.db1.password=root
#custom.datasource.db1.validationQuery=SELECT count(name) FROM sqlite_master

custom.datasource.db2.url=jdbc:mysql://172.16.13.201:3306/bes_lzjy?useUnicode=true&characterEncoding=UTF-8&useSSL=false
custom.datasource.db2.driverClassName=com.mysql.jdbc.Driver
custom.datasource.db2.username=root
custom.datasource.db2.password=123456
custom.datasource.db2.validationQuery=SELECT 'x'
#custom.datasource.db2.url=jdbc:sqlite:/Users/vincent/workspace/examples/springboot-freemarker/db/demo2.sqlite
#custom.datasource.db2.driverClassName=org.sqlite.JDBC
#custom.datasource.db2.username=
#custom.datasource.db2.password=
#custom.datasource.db2.validationQuery=SELECT count(name) FROM sqlite_master

#pagehelper
#pagehelper.helperDialect=sqlite
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# session共享存储 只支持redis none
spring.session.store-type=none
# 支持redis none REDIS
spring.cache.type=none
# 配置session失效时间
server.session.timeout=9000

#用户权限配置 at 20180829
#是否启用权限审核 默认不启用
system.parameter.qxsh=1
system.parameter.gnqx.useable=1
#功能权限 用户权限数据表
system.parameter.userGnqx=ES_USER_GNQX
#功能权限 用户分组权限数据表
system.parameter.classifyGnqxb=ES_ROLE_GNQX
#功能权限 用户分组权限数据表
system.parameter.groupGnqxb=ES_GROUP_GNQX
#功能权限 岗位权限数据表
system.parameter.postGnqxb=ES_POST_GNQX
#功能权限关系表
system.parameter.gnqxRlgl=ES_USER_ROLE_RLGL

#是否启用数据权限审核 默认不启用：0
system.parameter.sjqxsh=1
#是否启用数据权限启用  默认不启用：0
system.parameter.sjqx.useable=1
#数据权限 用户权限数据表
system.parameter.userSjqxb=ES_USER_SJQX
#数据权限 用户分组权限数据表
system.parameter.classifySjqxb=ES_ROLE_SJQX
#数据权限 用户分组权限数据表
system.parameter.groupSjqxb=ES_GROUP_SJQX
#数据权限 岗位权限数据表
system.parameter.postSjqxb=ES_POST_SJQX

#是否启用操作日志记录 默认不启用：0
system.dataBase.useable=0


#首页工作台区分页面	0(新版能耗)    1(能耗)   2(Cross)  3(整合)
system.parameter.distinguish=0

#是否启动采集器 默认启用：1，不启用：0
system.parameter.collector=0
#采集器轮询周期(分钟)
system.parameter.collectortime=5
#是否启用下位机状态轮询 默认启用：1，不启用0
system.parameter.bessbtreethread=0
#轮询周期(毫秒)
system.parameter.bespolltime=300

#fileinput上传文件本地保存路径
#system.parameter.uploadPath=D:/upload
system.parameter.uploadPath=/root/upload/

#程序开始运行时间
system.parameter.runingTime = 2018-10-27 08:30:00

#是否启用OPC数据，默认关闭 0
system.parameter.opcuseable=0

#加密狗
system.parameter.SuperDogState=0
#是否启用Ip拦截 默认不启用：0
system.parameter.ipable=0

#⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇ 上位机与下位机通信配置 ⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇

#端口 （上位机与下位机端口）
#comm.socketServer.port=8061
comm.socketServer.port=7788

#上位机与下位机心跳时间（秒）
comm.socketServer.heartbeat.interval=100
#上位机与下位机心跳超时周期（心跳时间 * 心跳超时周期 = 心跳超时时间）
comm.socketServer.heartbeat.timeout.intervals=5

#⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆ 上位机与下位机通信配置 ⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆


#⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇ websocket 配置 ⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇

#端口
comm.websocket.port=7789
#映射端口
#comm.websocket.port.mapping=8062
comm.websocket.port.mapping=7789
#路径
comm.websocket.path=/comm
#密码
comm.websocket.password=comm@ace
#心跳时间（秒）
comm.websocket.heartbeat.interval=30
#心跳超时周期（心跳时间 * 心跳超时周期 = 心跳超时时间）
comm.websocket.heartbeat.timeout.intervals=5


#⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆ websocket 配置 ⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆


#⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇ zhdg ⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇

# netty中间件地址
neetServerSendMsg.address = http://127.0.0.1:9007/netty/receive/sendMsg
# zhdg实时数据状态更新数据库-定时任务开关
task.switch=open

#⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆ websocket 配置 ⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆⬆

#tftp服务端路径
tftpServerSendMsg.address = d://